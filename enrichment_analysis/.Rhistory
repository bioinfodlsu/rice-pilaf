all_transcript <- c()
na_all_transcript <- c()
for (gene in background) {
transcript_id <- RiceIDConvert(gene, fromType = 'MSU', toType = 'TRANSCRIPTID')
transcript_id_list <- c()
transcript_id_list <- append(transcript_id_list, gene)
for (id in transcript_id$TRANSCRIPTID) {
if (is.na(id)) {
print(gene)
na_all_transcript <- append(na_all_transcript, gene)
} else {
transcript_id_list <- append(transcript_id_list, gene)
all_transcript <- c(all_transcript, transcript_id_list)
}
}
print(all_transcript, max.level = 0)
}
library(data.table)
library(riceidconverter)
all_genes <- read.table("data/all_genes.txt")
setwd("C:/Users/Edward/Documents/Research/rice_pilaf/enrichment_analysis")
library(data.table)
library(riceidconverter)
all_genes <- read.table("data/all_genes.txt")
all_genes <- all_genes[[1]]
all_transcript <- c()
na_all_transcript <- c()
for (gene in all_genes) {
transcript_id <- RiceIDConvert(gene, fromType = 'MSU', toType = 'TRANSCRIPTID')
transcript_id_list <- c()
transcript_id_list <- append(transcript_id_list, gene)
for (id in transcript_id$TRANSCRIPTID) {
if (is.na(id)) {
print(gene)
na_all_transcript <- append(na_all_transcript, gene)
} else {
transcript_id_list <- append(transcript_id_list, gene)
all_transcript <- c(all_transcript, transcript_id_list)
}
}
print(all_transcript, max.level = 0)
}
library(data.table)
library(riceidconverter)
all_genes <- read.table("data/all_genes.txt")
all_genes <- all_genes[[1]]
all_transcript <- c()
na_all_transcript <- c()
for (gene in all_genes) {
transcript_id <- RiceIDConvert(gene, fromType = 'MSU', toType = 'TRANSCRIPTID')
transcript_id_list <- c()
transcript_id_list <- append(transcript_id_list, gene)
for (id in transcript_id$TRANSCRIPTID) {
if (is.na(id)) {
print(gene)
na_all_transcript <- append(na_all_transcript, gene)
} else {
transcript_id_list <- append(transcript_id_list, id)
all_transcript <- append(all_transcript, transcript_id_list)
}
}
print(all_transcript, max.level = 0)
}
library(data.table)
library(riceidconverter)
all_genes <- read.table("data/all_genes.txt")
all_genes <- all_genes[[1]]
all_transcript <- c()
na_all_transcript <- c()
for (gene in all_genes) {
transcript_id <- RiceIDConvert(gene, fromType = 'MSU', toType = 'TRANSCRIPTID')
transcript_id_list <- c()
transcript_id_list <- append(transcript_id_list, gene)
for (id in transcript_id$TRANSCRIPTID) {
if (is.na(id)) {
print(gene)
na_all_transcript <- append(na_all_transcript, gene)
} else {
transcript_id_list <- append(transcript_id_list, id)
all_transcript <- list(all_transcript, transcript_id_list)
}
}
print(all_transcript, max.level = 0)
}
print(all_transcript, max.level = 0)
library(data.table)
library(riceidconverter)
all_genes <- read.table("data/all_genes.txt")
all_genes <- all_genes[[1]]
all_transcript <- c()
na_all_transcript <- c()
for (gene in all_genes) {
transcript_id <- RiceIDConvert(gene, fromType = 'MSU', toType = 'TRANSCRIPTID')
transcript_id_list <- c()
transcript_id_list <- append(transcript_id_list, gene)
for (id in transcript_id$TRANSCRIPTID) {
if (is.na(id)) {
print(gene)
na_all_transcript <- append(na_all_transcript, gene)
} else {
transcript_id_list <- append(transcript_id_list, id)
all_transcript <- list(all_transcript, transcript_id_list)
}
}
print(all_transcript, max.level = 0)
}
View(all_transcript)
library(data.table)
library(riceidconverter)
all_genes <- read.table("data/all_genes.txt")
all_genes <- all_genes[[1]]
all_transcript <- c()
na_all_transcript <- c()
for (gene in all_genes) {
transcript_id <- RiceIDConvert(gene, fromType = 'MSU', toType = 'TRANSCRIPTID')
transcript_id_list <- c()
transcript_id_list <- append(transcript_id_list, gene)
for (id in transcript_id$TRANSCRIPTID) {
if (is.na(id)) {
print(gene)
na_all_transcript <- append(na_all_transcript, gene)
} else {
transcript_id_list <- append(transcript_id_list, id)
print(transcript_id_list)
}
}
#print(all_transcript, max.level = 0)
}
library(data.table)
library(riceidconverter)
all_genes <- read.table("data/all_genes.txt")
all_genes <- all_genes[[1]]
all_transcript <- c()
na_all_transcript <- c()
for (gene in all_genes) {
transcript_id <- RiceIDConvert(gene, fromType = 'MSU', toType = 'TRANSCRIPTID')
transcript_id_list <- c()
transcript_id_list <- append(transcript_id_list, gene)
for (id in transcript_id$TRANSCRIPTID) {
if (is.na(id)) {
print(gene)
na_all_transcript <- append(na_all_transcript, gene)
} else {
transcript_id_list <- append(transcript_id_list, id)
all_transcript <- append(all_transcript, transcript_id_list)
}
}
print(all_transcript, max.level = 0)
}
library(data.table)
library(riceidconverter)
all_genes <- read.table("data/all_genes.txt")
all_genes <- all_genes[[1]]
all_transcript <- c()
na_all_transcript <- c()
for (gene in all_genes) {
transcript_id <- RiceIDConvert(gene, fromType = 'MSU', toType = 'TRANSCRIPTID')
transcript_id_list <- c()
transcript_id_list <- append(transcript_id_list, gene)
for (id in transcript_id$TRANSCRIPTID) {
if (is.na(id)) {
print(gene)
na_all_transcript <- append(na_all_transcript, gene)
} else {
transcript_id_list <- append(transcript_id_list, id)
all_transcript <- append(list(all_transcript), list(transcript_id_list))
}
}
print(all_transcript, max.level = 0)
}
library(data.table)
library(riceidconverter)
all_genes <- read.table("data/all_genes.txt")
all_genes <- all_genes[[1]]
all_transcript <- c()
na_all_transcript <- c()
for (gene in all_genes) {
transcript_id <- RiceIDConvert(gene, fromType = 'MSU', toType = 'TRANSCRIPTID')
transcript_id_list <- c()
transcript_id_list <- append(transcript_id_list, gene)
for (id in transcript_id$TRANSCRIPTID) {
if (is.na(id)) {
print(gene)
na_all_transcript <- append(na_all_transcript, gene)
} else {
transcript_id_list <- append(transcript_id_list, id)
all_transcript <- append(all_transcript, list(transcript_id_list))
}
}
print(all_transcript, max.level = 0)
}
library(data.table)
library(riceidconverter)
all_genes <- read.table("data/all_genes.txt")
all_genes <- all_genes[[1]]
all_transcript <- c()
na_all_transcript <- c()
for (gene in all_genes) {
transcript_id <- RiceIDConvert(gene, fromType = 'MSU', toType = 'TRANSCRIPTID')
transcript_id_list <- c()
transcript_id_list <- append(transcript_id_list, gene)
for (id in transcript_id$TRANSCRIPTID) {
if (is.na(id)) {
print(gene)
na_all_transcript <- append(na_all_transcript, gene)
} else {
transcript_id_list <- append(transcript_id_list, id)
}
}
all_transcript <- append(all_transcript, list(transcript_id_list))
print(all_transcript, max.level = 0)
}
View(all_transcript)
lapply(all_transcript, write, 'data/cluster1-transcript-id.txt', append = T, sep = '\n')
df <- data.frame(all_transcript)
library (plyr)
df <- ldply (all_transcript, data.frame)
View(df)
t(sapply(all_transcript,c))
m <- t(sapply(all_transcript,c))
View(m)
m <- sapply(all_transcript,c)
View(m)
df <- ldply (m, data.frame)
View(df)
m <- sapply(all_transcript,c)
df <- ldply (m, data.frame)
df
df <- data.frame(lapply(all_transcript, function(x) t(data.frame(x))))
View(df)
library(data.table)
library(riceidconverter)
library(plyr)
all_genes <- read.table("data/all_genes.txt")
all_genes <- all_genes[[1]]
all_transcript <- c()
na_all_transcript <- c()
for (gene in all_genes) {
transcript_id <- RiceIDConvert(gene, fromType = 'MSU', toType = 'TRANSCRIPTID')
transcript_id_list <- c()
transcript_id_list <- append(transcript_id_list, gene)
for (id in transcript_id$TRANSCRIPTID) {
if (is.na(id)) {
print(gene)
na_all_transcript <- append(na_all_transcript, gene)
} else {
transcript_id_list <- append(transcript_id_list, id)
}
}
all_transcript <- append(all_transcript, list(transcript_id_list))
}
lapply(na_all_transcript, write, 'data/cluster1-na-transcript-id.txt', append = T, sep = '\n')
lapply(all_transcript, write, 'data/cluster1-transcript-id.txt', append = T, sep = '\n')
setwd("~/Research/rice_pilaf/enrichment_analysis")
library(data.table)
library(riceidconverter)
all_genes <- read.table("data/all_genes.txt")
all_genes <- all_genes[[1]]
all_transcript <- c()
na_all_transcript <- c()
for (gene in all_genes) {
transcript_id <- RiceIDConvert(gene, fromType = 'MSU', toType = 'TRANSCRIPTID')
transcript_id_list <- c()
transcript_id_list <- append(transcript_id_list, gene)
for (id in transcript_id$TRANSCRIPTID) {
if (is.na(id)) {
print(gene)
na_all_transcript <- append(na_all_transcript, gene)
} else {
transcript_id_list <- append(transcript_id_list, id)
}
}
all_transcript <- append(all_transcript, list(transcript_id_list))
}
lapply(na_all_transcript, write, 'data/temp/all-na-transcript-id.txt', append = T, sep = '\n')
lapply(all_transcript, write, 'data/temp/all-transcript-id.txt', append = T, sep = '\n')
install.packages("languageserver")
setwd("C:/Users/Edward/Documents/Research/rice_pilaf/enrichment_analysis")
library(clusterProfiler)
library(data.table)
library(ggplot2)
genes <- read.table("data/modules/cluster1.txt")
genes <- genes[[1]]
background <- read.table("data/all_genes.txt")
background <- background[[1]]
library(GO.db)
goterms <- Term(GOTERM)
write.table(goterms, sep="\t", file="data/go_terms.txt")
library(GO.db)
go_table <- as.data.frame(GOTERM)
godb <- unique(go_table[,c(1,3,4)])
write.table(goterms, sep="\t", quote=FALSE, file="data/go/go_terms.txt")
gene_go
gene_go <- read.table("data/go/agrigo.txt", stringsAsFactors = FALSE)
View(gene_go)
gene_go[[3]]
gene_go[[3, 4]]
gene_go[[3:4]]
gene_go[, 3:4]
gene_go <- read.table("data/go/agrigo.txt", stringsAsFactors = FALSE)
gene_go <- gene_go[,3:4]
View(gene_go)
go_label <- read.table("data/go/go_terms.txt", stringsAsFactors = FALSE, header = TRUE)
godb
godb <- unique(go_table[,c(1,3,4)])
x <- godb[-1, ]
View(x)
View(godb)
godb <- unique(go_table[,c(1,3,4)])
write.table(goterms, sep="\t", quote=FALSE, file="data/go/go_terms.txt", col.names = FALSE)
go_label <- read.table("data/go/go_terms.txt", stringsAsFactors = FALSE, header = TRUE)
go_label <- read.table("data/go/go_terms.txt", stringsAsFactors = FALSE, header = TRUE)
go_label <- read.table("data/go/go_terms.txt", stringsAsFactors = FALSE, header = TRUE)
write.table(goterms, sep="\t", quote=FALSE, file="data/go/go_terms.txt", col.names = FALSE, row.names = FALSE)
library(GO.db)
go_table <- as.data.frame(GOTERM)
godb <- unique(go_table[,c(1,3,4)])
write.table(goterms, sep="\t", quote=FALSE, file="data/go/go_terms.txt", col.names = FALSE)
go_label <- read.table("data/go/go_terms.txt", stringsAsFactors = FALSE)
go_label <- read.table("data/go/go_terms.txt", sep = '\t', stringsAsFactors = FALSE)
go_label
View(go_label)
library(clusterProfiler)
library(data.table)
library(ggplot2)
genes <- read.table("data/modules/cluster1.txt")
genes <- genes[[1]]
background <- read.table("data/all_genes.txt")
background <- background[[1]]
gene_go <- read.table("data/go/agrigo.txt", stringsAsFactors = FALSE)
gene_go <- gene_go[,3:4]
go_label <- read.table("data/go/go_terms.txt", sep = '\t', stringsAsFactors = FALSE)
go <- enricher(gene = gene_go,
universe = go_label,
TERM2GENE = term2gene,
TERM2NAME = term2name
)
go <- enricher(gene = genes,
universe = background,
TERM2GENE = gene_go,
TERM2NAME = go_label
)
gene_go <- read.table("data/go/agrigo.txt", stringsAsFactors = FALSE)
gene_go <- gene_go[, 3:4]
gene_go <- gene_go[, c(4,3)]
gene_go <- gene_go[, c(2,1)]
View(gene_go)
go_label <- read.table("data/go/go_terms.txt", sep = '\t', stringsAsFactors = FALSE)
go <- enricher(gene = genes,
universe = background,
TERM2GENE = gene_go,
TERM2NAME = go_label
)
go_df <- as.data.frame(go)
write.table(go_df, "data/output/go_df.txt", sep = "\t", row.names = FALSE, quote = FALSE)
p1 <- dotplot(go,
showCategory = nrow(go_df),
title = "Top 10 most statistically significant enriched GO terms",
font.size = 10
)
ggsave(p1,
filename = "data/go_dotplot.png",
height = 22, width = 22, units = "cm"
)
