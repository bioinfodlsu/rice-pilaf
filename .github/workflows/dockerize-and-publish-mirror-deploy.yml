# This workflow handles creating the mirror Docker image for deployment
# and publishing it on the GitHub Container registry

name: Create and publish mirror Docker image for deployment

on:
    # Trigger workflow when a new release has been published
    workflow_run:
        workflows: [Publish release]
        types: [completed]
        branches: [minor-release, major-release, patch]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    # Build the image and push it to the GitHub Container registry:
    # https://docs.github.com/en/actions/publishing-packages/publishing-docker-images

    # Although only one image is built, this job uses the matrix strategy
    # (to lay the scaffolding in case multiple images will have to be built in the future):
    # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
    build-and-push-image:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix: # Cannot use env variables inside matrix
                include:
                    - dockerfile: Dockerfile-deploy
                      image: ghcr.io/bioinfodlsu/rice-pilaf/mirror-deploy
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ${{ matrix.image }}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log in to the Container registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  cache-from: type=gha
                  cache-to: type=gha, mode=max
                  file: ${{ matrix.dockerfile }}
                  push: true
                  tags: ${{ matrix.image }}:latest
                  labels: ${{ steps.meta.outputs.labels }}

    # Handle case where triggering workflow failed
    on-failure:
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        steps:
            - run: echo 'The triggering workflow failed'
